<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L7202WnMhhtueNxxx+l7+umn5weg+/SsDwBurrbaamOOOeZiiy224447brLJJmONNda0007Lmn/22Wfb
        bbfd6KOPjsUYt+WWW+LOUEMNpT2BxeWppppquOGGW2CBBXbaaafllltu7LHHHnrooX0IHdpoo41GHXXU
        6667jpast956OgJ4jTXWYKaWWmqpIYYYYsQRRwTzL7/8ssUWW2g58cQTb7755macaKKJRhllFA0oUPdh
        Y/6V1AcgrPb++++PETGHq9uU4OGHHyahQw455KqrrvrRRx9F1RNPPIFTI4888ksvvbTuuuviPn6xPKpc
        61x//fVxbZdddsF9WsUcQe7ZZ59lo+aYYw64XnvttWHcvv76a5DzED736dPHOFo+99xzvlKXm2+++V9/
        lgce6MpPruTnUIN71gGAqZ100kmHGWaYID4K7jD62OpWJWxuv/32VIWtk0wyCQCuueYaWkKiH3/88ajF
        2X322QcrTznlFF+ffvppDSgH8J566qkJJpjAaAxaNGbuTTrTTDP9+uuvxJ9yHHLIIVxF1HID7JjaF198
        scG8acrwdQAgyCONNBLDgiOxln79+uEpJ4mh8X8+pSq1V111lSfzzTffbbfdxuDMPffc77zzTnTkWrGb
        XN9///2+sjx0hTX3+frrr9dr2223TeSScU/4D1aO6YfohRdeSPY1AMNZZ5012mijrbTSSkShKRxq8CR1
        ABB1AIBxuPfee0Mw9913X5bdrWYATDjhhNh05JFHMi8U4s477yTFmOXms9iGidDx3HPPZbuMs+mmm7JX
        zDeu6XvYYYfpG16UZvh8wQUDLr2ycp7wzHxAGC4+HHIU8YwzzrAAQ+29994NZkyzhq8DAHEjpDweT4uh
        4447LqYTzIg18cJXltpztaSbrsAG10jummuuiU3wU8UuMUd4usQSS+ioweqrr+7rY4895quHWj7//PNB
        sUmxG3j33HOPr48++ihjZRxSbyjGx1BM2ZVXXtksDjV4nvpOWMQi2Nh666033njjPffc0338ZKnx8Y47
        7iC/quJdBk44LVb4tN9++xF8ARKjgZuu+Qs6NaATnvj63Xff+Sr6PPzww5M94XjOPPPM448/3s4jRiP4
        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
        rkJggg==
</value>
  </data>
</root>